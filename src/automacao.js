require("dotenv").config();
const { Builder, By, Key, until } = require("selenium-webdriver");
const path = require("path");
const { lerCSV } = require("./dados");

// URL do sistema
const EDUCARWEB_URL = "https://fraiburgo.educarweb.net.br";

// Credenciais de login
const USUARIO = process.env.USUARIO;
const SENHA = process.env.SENHA;

/**
 * Inicializa o WebDriver do Selenium.
 * @returns {Promise<WebDriver>}
 */
async function iniciarNavegador() {
    let driver = await new Builder().forBrowser("chrome").build();
    return driver;
}

/**
 * Realiza login no EducarWeb.
 * @param {WebDriver} driver
 */
async function fazerLogin(driver) {
    await driver.get(EDUCARWEB_URL);

    // Preenche o usu√°rio
    await driver.findElement(By.id("usuario")).sendKeys(USUARIO);

    // Preenche a senha
    await driver.findElement(By.id("senha")).sendKeys(SENHA);

    // Clica no bot√£o de login
    await driver.findElement(By.id("btnlogin")).click();

    // Aguarda a p√°gina intermedi√°ria de sele√ß√£o de portal
    await driver.wait(until.urlContains("selecione-o-portal"), 5000);

    // Clica no bot√£o "Administrador Do Transporte"
    let portalTransporte = await driver.findElement(By.xpath("//span[contains(text(),'Administrador Do Transporte')]"));
    await driver.executeScript("arguments[0].click();", portalTransporte);

    // Aguarda a p√°gina principal carregar
    await driver.wait(until.urlContains("/Home"), 5000);
}

/**
 * Navega at√© a se√ß√£o de Matr√≠cula Transporte.
 * @param {WebDriver} driver
 */
async function acessarMatriculaTransporte(driver) {
    try {
        // Aguarda a p√°gina carregar completamente
        await driver.sleep(2000);

        console.log("üîπ Expandindo o menu 'Matr√≠cula'...");

        // Expande o menu "Matr√≠cula" se n√£o estiver vis√≠vel
        let menuMatricula = await driver.findElement(By.xpath("//div[contains(text(),'Matr√≠cula')]"));
        await driver.executeScript("arguments[0].scrollIntoView();", menuMatricula);
        await driver.sleep(500);

        let menuAtivo = await menuMatricula.getAttribute("aria-expanded");
        if (menuAtivo === "false") {
            await driver.executeScript("arguments[0].click();", menuMatricula);
            await driver.sleep(2000);
        }

        console.log("‚úÖ Menu 'Matr√≠cula' expandido!");

        // Aguarda at√© que o link "Matr√≠cula Transporte" esteja vis√≠vel
        let menuTransporte = await driver.wait(
            until.elementLocated(By.xpath("//a[contains(text(),'Matr√≠cula Transporte')]")),
            5000
        );

        // Clica na op√ß√£o "Matr√≠cula Transporte"
        await driver.executeScript("arguments[0].click();", menuTransporte);
        console.log("‚úÖ Clicou em 'Matr√≠cula Transporte'!");

        // Aguardar um elemento espec√≠fico da p√°gina de Matr√≠cula Transporte
        console.log("‚è≥ Aguardando carregamento da p√°gina de Matr√≠cula Transporte...");
        await driver.wait(
            until.elementLocated(By.xpath("//input[contains(@placeholder, 'DIGITE AQUI O NOME DA PESSOA')]")),
            15000
        );

        console.log("‚úÖ P√°gina de Matr√≠cula Transporte carregada!");

    } catch (error) {
        console.error("‚ùå Erro ao acessar a p√°gina de Matr√≠cula Transporte:", error);
    }
}

/**
 * Executa o processo completo de login e navega√ß√£o at√© Matr√≠cula Transporte.
 */
async function iniciarAutomacao() {
    let driver = await iniciarNavegador();

    try {
        console.log("üü¢ Iniciando automa√ß√£o...");

        await fazerLogin(driver);
        console.log("‚úÖ Login realizado com sucesso!");

        await acessarMatriculaTransporte(driver);
        console.log("‚úÖ P√°gina de Matr√≠cula Transporte acessada!");

    } catch (error) {
        console.error("‚ùå Erro durante a automa√ß√£o:", error);
    } finally {
        // Fechar o navegador ap√≥s 10 segundos para visualizar o resultado
        await driver.sleep(10000);
        await driver.quit();
        console.log("üî¥ Automa√ß√£o finalizada!");
    }
}

// Executar a automa√ß√£o apenas se o arquivo for chamado diretamente
if (require.main === module) {
    iniciarAutomacao();
}
